/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/5o590uiaaBV
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'
import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import { tryPromise } from "@/lib/LangUtil";
import request from "@/service/WebClient";
import { useFormik } from "formik";
import * as Yup from "yup";

enum LeaveOrOvertimeType {
  "weekday_overtime" = "weekday_overtime",
  "weekend_overtime" = "weekend_overtime",
  "holiday_overtime" = "holiday_overtime",
  "personal_leave" = "personal_leave",
  "sick_leave" = "sick_leave",
  "marriage_leave" = "marriage_leave",
  "compensation_leave" = "compensation_leave",
}

export function TimeEasyOffFrom(props: { onSuccess: () => void }) {
  const submitTimeEasyOff = async (data: any) => {
    const result = await tryPromise(
      request("/api/user_leave_overtime/add", {
        method: "post",
        data,
      })
    );
    if (result.error) {
      return console.log(result.error);
    }
    props.onSuccess();
  };

  const formik = useFormik({
    initialValues: {
      leave_or_overtime: "",
      leave_or_overtime_type: "",
      reason: "",
      start_time: "",
      end_time: "",
      leave_duration: "",
    },
    validationSchema: Yup.object({
      // leave_or_overtime: Yup.string().required(""),
    }),
    onSubmit: (values) => {
      console.log(values, "values");
      submitTimeEasyOff(values);
    },
  });

  return (
    <div className="grid w-full max-w-sm gap-4">
      <div className="grid gap-1.5">
        <Label htmlFor="leave_or_overtime">Leave or Overtime</Label>
        <RadioGroup
          id="leave_or_overtime"
          onValueChange={(e) => {
            formik.handleChange({
              target: { value: e, id: "leave_or_overtime" },
            });
          }}
          value={formik.values.leave_or_overtime}
        >
          <div className="flex items-center space-x-2">
            <RadioGroupItem id="leave" value="leave" />
            <Label
              className="font-medium text-sm leading-none peer-disabled:cursor-not-allowed"
              htmlFor="leave"
            >
              Leave
            </Label>
          </div>
          <div className="flex items-center space-x-2">
            <RadioGroupItem id="overtime" value="overtime" />
            <Label
              className="font-medium text-sm leading-none peer-disabled:cursor-not-allowed"
              htmlFor="overtime"
            >
              Overtime
            </Label>
          </div>
        </RadioGroup>
      </div>
      <div className="grid gap-1.5">
        <Label htmlFor="leave_or_overtime_type">Leave or Overtime Type</Label>
        <Select
          value={formik.values.leave_or_overtime_type}
          onValueChange={(e) => {
            formik.handleChange({
              target: { value: e, id: "leave_or_overtime_type" },
            });
          }}
        >
          <SelectTrigger id="leave_or_overtime_type">
            <SelectValue placeholder="Select" />
          </SelectTrigger>
          <SelectContent position="popper">
            {Object.entries(LeaveOrOvertimeType).map(([key, value]) => {
              return (
                <SelectItem value={value} key={key}>
                  {value}
                </SelectItem>
              );
            })}
          </SelectContent>
        </Select>
      </div>
      <div className="grid gap-1.5">
        <Label htmlFor="reason">Reason</Label>
        <Textarea
          onChange={formik.handleChange}
          value={formik.values.reason}
          id="reason"
          placeholder="Enter your reason for leave or overtime."
        />
      </div>
      <div className="grid gap-1.5">
        <Label>Time</Label>
        <div className="grid gap-0.5">
          <div className="grid grid-cols-2 items-center gap-2">
            <Label htmlFor="start_time">Start Time</Label>
            <Input
              onChange={formik.handleChange}
              value={formik.values.start_time}
              className="text-sm peer-disabled:cursor-not-allowed"
              id="start_time"
              type="datetime-local"
            />
          </div>
          <div className="grid grid-cols-2 items-center gap-2">
            <Label htmlFor="end_time">End Time</Label>
            <Input
              onChange={formik.handleChange}
              value={formik.values.end_time}
              className="text-sm peer-disabled:cursor-not-allowed"
              id="end_time"
              type="datetime-local"
            />
          </div>
        </div>
      </div>
      <div className="grid gap-1.5">
        <Label htmlFor="leave_duration">Leave Duration</Label>
        <Input
          onChange={(e) => {
            console.log(e);

            formik.handleChange(e);
          }}
          id="leave_duration"
          placeholder="Leave duration"
          value={formik.values.leave_duration}
        />
      </div>
      <div onClick={() => formik.handleSubmit()}>Submit</div>
    </div>
  );
}
